spring.config.import=optional:secrets.properties

# Server configuration
server.port=8080

# Logging configuration

logging.level.root = INFO
logging.level.org.hibernate.engine.jdbc.spi.SqlExceptionHelper = FATAL

# Internationalization
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600

# PostgreSQL configuration (commented out for now, uncomment for production)
spring.datasource.url=jdbc:postgresql://localhost:5432/reittidb
spring.datasource.username=reitti
spring.datasource.password=reitti

#Redis configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.username=
spring.data.redis.password=

spring.thymeleaf.cache=false


# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=reitti
spring.rabbitmq.password=reitti
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.initial-interval=1000ms
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.multiplier=1.5
spring.rabbitmq.listener.simple.prefetch=10


spring.cache.cache-names=processed-visits,significant-places
spring.cache.redis.time-to-live=1d


# Upload configuration
spring.servlet.multipart.max-file-size=5GB
spring.servlet.multipart.max-request-size=5GB
server.tomcat.max-part-count=100

# Security configuration
spring.security.oauth2.client.registration.oauth.client-id=<your_client_id>
# spring.security.oauth2.client.registration.oauth.client-secret=<WARNING: CREATE_A_secrets.properties_FILE>
spring.security.oauth2.client.registration.oauth.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.oauth.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.oauth.scope=openid,profile
spring.security.oauth2.client.registration.oauth.provider=<your_oauth_provider>
spring.security.oauth2.client.registration.oauth.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.<your_oauth_provider>.issuer-uri=https://<your_oauth_provider_base_uri>

# Application specific settings
reitti.import.batch-size=1000
# How many seconds should we wait after the last data input before starting to process all unprocessed data?
reitti.import.processing-idle-start-time=15

reitti.events.concurrency=1-16

reitti.visit.merge-threshold-meters=${reitti.staypoint.distance-threshold-meters}
reitti.visit.merge-threshold-seconds=300
reitti.visit.merge-max-stay-search-extension-days=2

# Stay point detection settings
reitti.staypoint.distance-threshold-meters=100
reitti.staypoint.min-points=5

reitti.geo-point-filter.max-speed-kmh=1000
reitti.geo-point-filter.max-accuracy-meters=200
reitti.geo-point-filter.max-distance-jump-meters=5000

reitti.process-data.schedule=0 */10 * * * *
reitti.imports.schedule=0 5/10 * * * *

reitti.imports.owntracks-recorder.schedule=${reitti.imports.schedule}
# Geocoding service configuration
reitti.geocoding.max-errors=10

# Geocoding fixed service configuration
reitti.geocoding.photon.base-url=

# Tiles Configuration
reitti.ui.tiles.default.service=https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png
reitti.ui.tiles.default.attribution=&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Tiles style by <a href="https://www.hotosm.org/" target="_blank">Humanitarian OpenStreetMap Team</a> hosted by <a href="https://openstreetmap.fr/" target="_blank">OpenStreetMap France</a>

# You can set custom tiles service and attribution by uncommenting the next two keys and setting them to appropriate values
#reitti.ui.tiles.custom.service=
#reitti.ui.tiles.custom.attribution=

# Data management configuration
reitti.data-management.enabled=false
